paths:
  /api/users:
    get:
      summary: Obtiene todos los usuarios.
      tags:
        - Users
      responses:
        "200":
          description: Los usuarios fueron obtenidos satisfactoriamente de la BDD.
          content: 
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o fallo de conexión a la BDD.

  /api/users/{id}:
    get:
      summary: Obtiene un usuario a partir de su Id.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: Corresponde al Id del usuario
          schema:
            $type: String
      responses:
        "200":
          description: El usuario fue obtenido satisfactoriamente de la BDD.
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: No se encontró el usuario en la BDD. Puede ser generado por una mala petición.
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o fallo de conexión a la BDD.

  /api/users/login:
    post:
      summary: Inicia sesión.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/requestBodies/login'
      responses:
        "200":
          description: Inicio de sesión exitoso.
        "401":
          description: Error de autenticación. Las credenciales para inicio de sesión no son válidas.
        "404":
          description: Error del cliente, no se encontró el usuario en la BDD. Puede ser generado por una mala petición.
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o fallo de conexión a la BDD.

  /api/users/register:
    post:
      summary: Registra un nuevo usuario.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/requestBodies/newUser'
      responses:
        "200":
          description: El usuario fue registrado correctamente.
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Error del cliente. Puede ser generado por una sintaxis incorrecta o valores incompletos.
        "409":
          description: Error del cliente. Se intenta regisrar un usuario ya registrado en la BDD.
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o fallo de conexión a la BDD.

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por MongoDB
        first_name:
          type: String
          description: Nombre del usuario
        last_name:
          type: String
          description: Apellido del usuario
        email:
          type: String
          description: Correo electrónico del usuario
        age:
          type: Number
          description: Edad del usuario
        password:
          type: String
          description: Password del usuario
        cart:
          type: ObjectId
          description: Id del carrito del usuario
        role:
          type: String
          description: Rol del usuario     
      example:
        _id: ObjectId('a6876dsd6767876sd6')
        first_name: Jon
        last_name: Doe
        email: mail@example.com
        age: 30
        password: PasswordExample@111
        cart: ObjectId('b4546545mjjjhh563')
        role: admin
  requestBodies:
    newUser:
      type: object
      properties:
        first_name:
          type: String
          description: Nombre del usuario
        last_name:
          type: String
          description: Apellido del usuario
        email:
          type: String
          description: Correo electrónico del usuario
        password:
          type: String
          description: Password del usuario
        role:
          type: String
          description: Rol del usuario     
      example:
        first_name: Jon
        last_name: Doe
        email: mail@example.com
        password: PasswordExample$111
        role: admin 
    login:
      type: object
      properties:
        email:
          type: String
          description: Correo electrónico del usuario
        password: 
          type: String
          description: Contraseña del usuario

